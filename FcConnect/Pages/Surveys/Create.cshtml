@page
@model FcConnect.Pages.Surveys.CreateModel

@{
    ViewData["Title"] = "Create";
}

<div class="row g-0 mb-0">
    <div class="col d-flex align-items-center">
        @Html.Raw(Model.SvgContent)
        <h5 class="card-title quicksandText mt-4 pt-5">New <br /> Survey</h5>
    </div>
    <div class="col d-flex align-items-end justify-content-end">
        <a asp-page="Index" class="btn btn-secondary mb-2"><i class="bi bi-arrow-left-short"></i>&nbsp;Back</a>
    </div>
</div>
<hr class="mt-0" />

<div class="row">
    <div class="col">
        <button id="addQuestionField" type="button" class="btn btn-success"><i class="bi bi-plus-circle"></i> Add Question</button>
        <button id="removeQuestionField" type="button" class="btn"><i class="bi bi-trash-fill"></i> Remove Last Question</button>
    </div>
</div>
<div class="row">
    <div class="col-md-4">
        <form id="questionsForm" method="post" autocomplete="off">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Survey.Name" class="control-label mt-3"></label>
                <input id="nameField" asp-for="Survey.Name" class="form-control mb-3" placeholder="Enter a name for the survey" autocomplete="off" autofocus />
                <span asp-validation-for="Survey.Name" class="text-danger"></span>
            </div>            
            <div class="form-group" id="questionsContainer">
                <label id="questionsLabel" style="visibility:hidden;" >Questions</label>
                <!-- Question text fields dynamically inserted here-->
            </div>
            <div class="form-group">
                <button type="submit" value="Save Survey" class="btn btn-primary mt-3 mb-3" id="submit"><i class="bi bi-floppy-fill"></i> Save Survey</button>
            </div>
        </form>
    </div>
</div>





@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>

    var questionFieldsCount = 0;

    document.getElementById("nameField").focus();


    document.getElementById('submit').addEventListener('click', function () {
        
        
        var hiddenQuestionFieldCount = document.createElement('input');
        hiddenQuestionFieldCount.type = 'hidden';
        hiddenQuestionFieldCount.id = 'hiddenQuestionFieldCount';
        hiddenQuestionFieldCount.name = 'hiddenQuestionFieldCount';
        document.getElementById('questionsForm').appendChild(hiddenQuestionFieldCount);
        document.getElementById('hiddenQuestionFieldCount').value = questionFieldsCount;

    });

   /* // disable submit button when form submitted to prevent duplicate entries
    document.getElementById('questionsForm').addEventListener('submit', function (event) {
        var submitButton = document.getElementById("submit");

        if (questionFieldsCount > 0) {
            submitButton.disabled = true;
        }
    });*/

        // add question field button click
    document.getElementById('addQuestionField').addEventListener('click', function () {
        
        // set the questions label visibile when a question is added
        questionsLabel.style.visibility = "visible";

        // generate a text field on each click
        var fieldId = 'QuestionText' + questionFieldsCount;      
        
        var questionField = document.createElement('input');
        questionField.type = 'text';
        questionField.name = fieldId;
        questionField.id = fieldId;
        questionField.className = "form-control mb-3";
        questionField.placeholder = "Question " + (questionFieldsCount + 1);
        questionField.required = true;
        questionField.autocomplete = "off";
        

        // Append the new field to a container div or directly to the form
        document.getElementById('questionsContainer').appendChild(questionField);
        document.getElementById(fieldId).focus();

            // Increment the counter for the next field
        questionFieldsCount += 1;    

    });

    // remove question field button click
    document.getElementById('removeQuestionField').addEventListener('click', function () {
        const fieldToRemove = document.getElementById('QuestionText' + (questionFieldsCount - 1));
        if (questionFieldsCount > 0) 
        {
            questionFieldsCount -= 1;
        }        
        fieldToRemove.remove();
    });


</script>