@page
@model FcConnect.Pages.Users.IndexModel

@{
    ViewData["Title"] = "User Management";
    Guid clickCheck = Guid.NewGuid();
    HttpContext.Session.SetString("UserEditClick", clickCheck.ToString());
}

        <div class="row g-0 mb-2">
            <div class="col d-flex align-items-center">
                @Html.Raw(Model.SvgContent)
                <h5 class="card-title quicksandText mt-1 pt-5">User <br /> Management</h5>
            </div>  
            <div class="col d-flex justify-content-end align-items-end">
                    <a asp-area="Identity" asp-page="/Account/Register" class="btn btn-primary mt-1"><i class="bi bi-person-add"></i>&nbsp;Add new user</a>
            </div>
      </div>
      <hr />
<form asp-page="./Index" method="get" id="filters">
    <div class="form-actions no-color">
        <div class="row mt-2">
            <div class="col-sm-12 col-md-6 col-lg-4 mb-3">
                <div class="input-group">
                    <input class="form-control" name="SearchString" type="text" placeholder="Search by name" id="customTextField" value="@Request.Query["SearchString"]" />
                    <div class="input-group-append">
                        <button type="submit" value="Search" class="btn btn-primary" id="customTextFieldButton"><i class="bi bi-search"></i> Search</button>
                    </div>
                </div>
            </div>
            <div class="col-sm-12 col-md-6 col-lg-4 mb-3 d-flex align-items-center">
                <div class="form-check">
                    <input type="hidden" id="SuspendedCheckHidden" name="SuspendedCheckHidden" value="false" />
                    <input class="form-check-input me-1" name="SuspendedCheck" type="checkbox" id="suspendedUsersCheck" onchange="this.form.submit()">
                    <label class="form-check-label" for="suspendedUsersCheck">Show suspended users</label>
                </div>
            </div>
        </div>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th class="border-bottom" id="tableHeaderLeft">
                @Html.DisplayNameFor(model => model.Users[0].Forename)
            </th>
            <th class="border-bottom">
                @Html.DisplayNameFor(model => model.Users[0].Surname)
            </th>
            <th class="border-bottom">
                @Html.DisplayNameFor(model => model.Users[0].Email)
            </th>
            <th class="border-bottom">
                User Role
            </th>
            <th class="border-bottom" id="tableHeaderRight"></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Users) {
            <tr>
            <td class="align-middle">
                @if (item.UserStatusId == Constants.StatusUserSuspended)
                {
                    <i class="bi bi-person-fill-x text-danger" data-toggle="tooltip" data-bs-placement="bottom" title="User Suspended"></i>
                }
                &nbsp;@Html.DisplayFor(modelItem => item.Forename)
            </td>
            <td class="align-middle">
                @Html.DisplayFor(modelItem => item.Surname)
            </td>
            <td class="align-middle">
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td class="align-middle">
                @{
                    string role;
                    int roleId = item.RoleId;
                    switch (roleId)
                    {
                        case Constants.RoleUser:
                            role = "User";
                            break;
                        case Constants.RoleAdmin:
                            role = "Admin";
                            break;
                        case Constants.RoleDeveloper:
                            role = "Developer";
                            break;
                        default:
                            role = "Unknown";
                            break;
                    }
                }
                @role

            </td>
            <td>
                <a class="btn btn-border-primary" asp-page="./Edit" asp-route-id="@item.Id" asp-route-click="@clickCheck"><i class="bi bi-pencil"></i>&nbsp;Edit</a> 
                <a class="btn btn-danger" asp-page="./Delete" asp-route-id="@item.Id" asp-route-click="@clickCheck"><i class="bi bi-trash3"></i></a>
            </td>
        </tr>
}
    </tbody>
</table>

<script>

    var isChecked = sessionStorage.getItem('suspendedUsersChecked') === 'true';
    document.querySelector('input[name="SuspendedCheckHidden"]').value = isChecked.toString();

    document.getElementById('suspendedUsersCheck').checked = isChecked;

    document.getElementById('suspendedUsersCheck').addEventListener('change', function () {
        var isChecked = this.checked;
        document.querySelector('input[name="SuspendedCheckHidden"]').value = isChecked.toString();
        sessionStorage.setItem('suspendedUsersChecked', this.checked.toString());
        document.getElementById('filters').submit();
    });
</script>